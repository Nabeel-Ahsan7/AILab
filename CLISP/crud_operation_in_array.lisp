;; create a large array 
(setq mx_size 100)
(setq arr (make-array mx_size))
(setq current_size 0)

(loop 
    (format t "(1) Insert Value ~%(2) Update Value ~%(3) Delete Value ~%(4) Display Array ~%(5) Exit ~%Enter Your Choice(1-5) :")
    (setq choice (read))
    (cond
        ((= choice 1)
            (if (< current_size 100)
                (progn
                    (format t "Enter the value to insert : ")
                    (setf (aref arr current_size) (read))
                    (incf current_size)
                    (format t "Value inserted !~%")
                )
                (format t "Array is full !!~%")
            )
        )
        ((= choice 2)
            (if (> current_size 0)
                (progn
                    (format t "Array elements are : ~%")
                    (loop for indx from 0 below current_size do
                        (format t "~a (ind=~a)~%"(aref arr indx) indx)
                    )
                    (format t "Which Element Do You Want To Update ? ~%")
                    (format t "Enter it's indx value : ")
                    (setq i (read))
                    (format t "Enter the updated value : ")
                    (setf (aref arr i) (read))
                    (format t "Value is updated ! ~%")
                    (loop for indx from 0 below current_size do
                        (format t "~a (ind=~a)~%"(aref arr indx) indx)
                    )
                )
                (format t "Array is empty~%")
            )
        )
        ((= choice 3)
            (if (> current_size 0)
                (progn
                    (format t "Array elements are : ~%")
                    (loop for indx from 0 below current_size do
                        (format t "~a (ind=~a)~%"(aref arr indx) indx)
                    )
                    (format t "Which Element Do You Want To Delete ? ~%")
                    (format t "Enter it's indx value : ")
                    (setq i (read))
                    (loop for indx from i below current_size do
                        (setf (aref arr i) (aref arr (+ i 1)))
                    )
                    (format t "Value is deleted ! ~%")
                    (decf current_size)
                    (loop for indx from 0 below current_size do
                        (format t "~a (ind=~a)~%"(aref arr indx) indx)
                    )
                )
                (format t "Array is empty~%")
            )
        )
        ((= choice 4)
            (if (> current_size 0)
                (progn
                    (format t "The Element of the array : ")
                    (loop for indx from 0 below current_size do 
                        (format t "~a " (aref arr indx))
                    )
                    (format t "~%")
                )
                (format t "Array is empty!~% ~%")
            )
        )
        ((= choice 5)
            (return)
        )
    )
)